using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using CommonFramework.Exceptions;
using CommonFramework.IBatisNet;
using ServiceStack.OrmLite;
using DataStoreProject.Model.Entity.Chapters;
using DataStoreProject.Model.Entity.Question;
using DataStoreProject.Model.Entity.ExamPaper;
using DataStoreProject.Model.Entity;
using DataStoreProject.Model.ViewModel;
using DataStoreProject.Model.Entity.Discipline;

namespace DataStoreProject.Business
{
    public class DisciplineMapper : BaseMapper
    {

        /// <summary>
        /// 根据学科id 查找学科
        /// </summary>
        /// <param name="ID"></param>
        /// <param name="System_Station_ID"></param>
        /// <returns></returns>
        public IList GetDisciplineByID(int ID, int System_Station_ID)
        {
            return QueryForList("selectDisciplineByID", new { ID = ID, System_Station_ID = System_Station_ID });
        }

        /// <summary>
        /// 是否推荐学科
        /// </summary>
        /// <param name="ID"></param>
        /// <param name="System_Station_ID"></param>
        /// <returns></returns>
        public bool GetIsRecommend(int ID, int Recommend, int System_Station_ID)
        {
            W_Discipline model = Orm.Single<W_Discipline>(x => x.ID == ID && x.System_Station_ID == System_Station_ID);
            if (model == null)
            {
                throw new ApiException("学科已删除，请重试");
            }
            if (Recommend == 1)
            {
                model.IsRecommend = 1;
            }
            else
            {
                model.IsRecommend = 0;
            }
            if (Orm.Update(model) <= 0)
            {
                throw new ApiException("操作失败,请重试");
            }
            return true;
        }

        /// <summary>
        ///  查询所有的学科
        /// </summary>
        /// <param name="System_Station_ID">系统ID</param>
        /// <returns></returns>
        public List<DisciplineModel> GetAllDiscipline(DisciplineModel Model, int System_Station_ID)
        {
            List<DisciplineModel> List = SqlMapper.QueryForList<DisciplineModel>("GetAllDiscipline", new { System_Station_ID = System_Station_ID, IsRecommend = Model.IsRecommend, Valid = Model.Valid, Name = Model.Name }).ToList();

            //添加子集
            List<DisciplineModel> NodeList = new List<DisciplineModel>();
            if (List != null && List.Count > 0)
            {
                NodeList = List.FindAll(X => X.CID == 0);
                if (NodeList != null && NodeList.Count > 0)
                {
                    NodeList.ForEach(x =>
                    {
                        x.ChildNodeList = List.FindAll(F => F.CID == x.ID);
                        if (x.ChildNodeList != null && x.ChildNodeList.Count > 0)
                        {
                            x.ChildNodeList.ForEach(y =>
                            {
                                y.ChildNodeList = List.FindAll(K => K.CID == y.ID);
                            });
                        }
                    });
                }
            }
            return NodeList;
        }

        /// <summary>
        /// 拖拽排序（拖拽完就保存）
        /// </summary>
        /// <param name="old_prev_order">拖拽前上节点排序值</param>
        /// <param name="old_next_order">拖拽前下节点排序值</param>
        /// <param name="new_prev_order">拖拽后上节点排序值</param>
        /// <param name="new_next_order">拖拽后下节点排序值</param>
        /// <param name="currDisciplineId">当前被拖拽ID</param>
        /// <param name="currParentId">当前被拖拽ID的父ID</param>
        /// <param name="System_Station_ID">系统ID</param>
        /// <returns></returns>
        public bool SortDiscipline(SortDisciplineModel model, int System_Station_ID)
        {
            if (model.currDisciplineId <= 0)
            {
                throw new ApiException("无效参数！");
            }
            W_Discipline Disciplinemodel = Orm.Single<W_Discipline>(x => x.ID == model.currDisciplineId && x.System_Station_ID == System_Station_ID);
            if (Disciplinemodel == null)
            {
                throw new ApiException("操作失败，您无权操作");
            }


            if (model.new_prev_order == model.old_prev_order && model.new_next_order == model.old_next_order) //没移动
                return false;

            if (model.new_prev_order == 0) //第一种情况：拖到最上面 （拖拽后上一层order为0）
            {
                Disciplinemodel.Orders = 1;
                if (Orm.Update(Disciplinemodel) > 0)
                {
                    if (model.old_next_order == 0) //从最下面拖到最上面
                    {
                        return QueryForList("SortDiscipline", new { currParentId = model.currParentId, System_Station_ID = System_Station_ID, currDisciplineId = model.currDisciplineId }).Count > 0;
                    }
                    else
                    {
                        return QueryForList("SortDiscipline1", new { currParentId = model.currParentId, System_Station_ID = System_Station_ID, old_next_order = model.old_next_order, currDisciplineId = model.currDisciplineId }).Count > 0;
                    }
                }
                else
                {
                    return false;
                }
            }
            else if (model.new_next_order == 0)//第二种情况：拖到最下面（拖拽后下一层order为0）
            {
                if (QueryForList("SortDiscipline2", new { currParentId = model.currParentId, System_Station_ID = System_Station_ID, currDisciplineId = model.currDisciplineId }).Count > 0)
                {
                    if (model.old_prev_order == 0) //从最上面拖到最下面
                    {
                        return QueryForList("SortDiscipline3", new { currParentId = model.currParentId, System_Station_ID = System_Station_ID, currDisciplineId = model.currDisciplineId }).Count > 0;
                    }
                    else
                    {
                        return QueryForList("SortDiscipline4", new { currParentId = model.currParentId, System_Station_ID = System_Station_ID, old_prev_order = model.old_prev_order, currDisciplineId = model.currDisciplineId }).Count > 0;
                    }
                }
                else
                {
                    return false;
                }
            }
            else if (model.new_prev_order > 0 && model.new_next_order > 0)//第三种情况：拖到中间
            {
                if (model.new_prev_order < model.old_prev_order && model.new_next_order < model.old_next_order)//往上拖
                {
                    if (QueryForList("SortDiscipline5", new { new_next_order = model.new_next_order, currDisciplineId = model.currDisciplineId, System_Station_ID = System_Station_ID }).Count > 0)
                    {
                        if (model.old_next_order == 0) //从最下面往上拖
                        {
                            return QueryForList("SortDiscipline6", new { currParentId = model.currParentId, System_Station_ID = System_Station_ID, new_prev_order = model.new_prev_order, currDisciplineId = model.currDisciplineId }).Count > 0;
                        }
                        else
                        {
                            return QueryForList("SortDiscipline7", new { currParentId = model.currParentId, System_Station_ID = System_Station_ID, old_next_order = model.old_next_order, new_prev_order = model.new_prev_order }).Count > 0;
                        }
                    }
                    else
                    {
                        return false;
                    }
                }
                else if (model.new_prev_order > model.old_prev_order && model.new_next_order > model.old_next_order)//往下拖
                {
                    if (QueryForList("SortDiscipline8", new { new_prev_order = model.new_prev_order, currDisciplineId = model.currDisciplineId, System_Station_ID = System_Station_ID }).Count > 0)
                    {
                        if (model.old_prev_order == 0) //从最上面往下拖
                        {
                            return QueryForList("SortDiscipline9", new { currParentId = model.currParentId, System_Station_ID = System_Station_ID, new_next_order = model.new_next_order, currDisciplineId = model.currDisciplineId }).Count > 0;
                        }
                        else
                        {
                            return QueryForList("SortDiscipline10", new { currParentId = model.currParentId, System_Station_ID = System_Station_ID, new_next_order = model.new_next_order, old_prev_order = model.old_prev_order }).Count > 0;
                        }
                    }
                    else
                    {
                        return false;
                    }
                }
            }
            return true;
        }

        /// <summary>
        ///删除学科及对应的关系表 DeleteDiscipline
        /// </summary>
        public bool RemoveDiscipline(int ID, int System_Station_ID)
        {
            if (ID <= 0)
            {
                throw new ApiException("无效参数!");
            }
            //判断是不是该机构添加的学科 
            W_Discipline model = Orm.Single<W_Discipline>(x => x.ID == ID && x.System_Station_ID == System_Station_ID);
            if (model == null)
            {
                throw new ApiException("操作失败，未找到对应的数据！");
            }
            ///判断学科启用状态
            if (model.Valid == 1)
            {
                throw new ApiException("学科启用状态，不能删除！");
            }
            W_Discipline modelCid = Orm.Single<W_Discipline>(x => x.CID == ID && x.System_Station_ID == System_Station_ID);
            ///判断学科子集是否存在课程
            if (modelCid != null)
            {
                throw new ApiException("该学科下面存在课程，不能删除！");
            }
            W_QuestionStore modelstore = Orm.Single<W_QuestionStore>(x => x.Discipline_ID == ID && x.System_Station_ID == System_Station_ID && x.IsDelete == 0);
            ///判断题库是否应用该学科
            if (modelstore != null)
            {
                throw new ApiException("题库应用了该学科，不能删除！");
            }
            W_CourseWare modelware = Orm.Single<W_CourseWare>(x => x.Discipline_ID == ID && x.System_Station_ID == System_Station_ID);
            ///判断资源库是否应用该学科
            if (modelware != null)
            {
                throw new ApiException("资源库应用了该学科，不能删除！");
            }
            //删除数据
            if (Orm.Delete<W_Discipline>(x => x.ID == ID && x.System_Station_ID == System_Station_ID) > 0)
            {
                return true;
            }
            return false;
        }

        /// <summary>
        ///添加 or 修改学科
        /// </summary>
        public bool SaveDiscipline(W_Discipline Model, int System_Station_ID, int AccountID)
        {
            if (Model.ID < 0)
            {
                throw new ApiException("无效参数");
            }
            //判断是不是该机构添加的学科 
            W_Discipline model = Orm.Single<W_Discipline>(x => x.ID == Model.ID && x.System_Station_ID == System_Station_ID);
            if (model == null)
            {
                throw new ApiException("操作失败，未找到对应的数据！");
            }
            Model.AddPerson = AccountID;
            Model.AddTime = DateTime.Now;
            Model.Valid = 1;
            if (Orm.Update(Model) > 0)
            {
                return true;
            }
            else
            {
                return false;
            }
        }

        /// <summary>
        /// 禁用、启用学科
        /// </summary>
        public bool SetDisciplineValid(W_Discipline model, int System_Station_ID)
        {
            if (model.ID < 0)
            {
                throw new ApiException("无效参数");
            }
            W_Discipline modelDiscipline = Orm.Single<W_Discipline>(x => x.ID == model.ID && x.System_Station_ID == System_Station_ID);
            if (modelDiscipline == null) 
            {
                throw new ApiException("操作失败，您无权操作！");
            }
            if (model.Valid ==1) 
            {
                if (modelDiscipline.CID != 0) 
                {
                  W_Discipline CidModel=Orm.Single<W_Discipline>(x => x.CID == modelDiscipline.CID && x.System_Station_ID == System_Station_ID);
                  if (CidModel.Valid == 0) 
                  {
                      throw new ApiException("请先启用上级学科！");
                  }
                }
                modelDiscipline.Valid = model.Valid;
                if (Orm.Update(modelDiscipline)>0) 
                {
                    return true;
                }
            }
            return false;
        }
    }
}