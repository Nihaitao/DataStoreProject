<?xml version="1.0" encoding="utf-8"?>

<sqlMap namespace="ExamPaperMapper" xmlns="http://ibatis.apache.org/mapping"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <statements>
    <delete id="DeleteExamPaper" parameterClass="map">
      delete from w_exampaper where ID = #id#;
      delete from w_exampaperdetail where ExamPaper_ID = #id#;
      delete from w_exampaperdetail_detail where ExamPaper_ID = #id#;
    </delete>

    <select id="GetExamPaperTotalCount" resultClass="int" parameterClass="map">
      select count(1)
      <include refid ="GetExamPaper_Fragment"></include>
    </select>

    <select id="GetExamPaperList" resultClass="map" parameterClass="map">
      select a.*,b.Name as AddPersonName,c.Name as QuestionStoreName,
      (select sum(Num) from  w_exampaperdetail where ExamPaper_ID = a.ID) as TotalQuestions,
      (select sum(Sorce * num) from  w_exampaperdetail where ExamPaper_ID = a.ID) as TotalScore,
      (select ProvinceName from h_province p where a.Province_ID=p.ProvinceID) ProvinceName
      <include refid ="GetExamPaper_Fragment"></include>
    </select>

    <sql id="GetExamPaper_Fragment">
      from w_exampaper a
      left join h_station_account b on a.AddPerson = b.Account_ID
      left join w_questionstore c on a.QuestionStore_ID = c.ID
      where a.System_Station_ID = #stationId#
      <isNotEmpty prepend="and" property="title">
        a.Title like concat('%',#title#,'%')
      </isNotEmpty>
      <isGreaterThan compareValue="-1" prepend="and" property="type">
        a.ExamPaperType=#type#
      </isGreaterThan>
      <isGreaterThan compareValue="0" prepend="and" property="store">
        a.QuestionStore_ID=#store#
      </isGreaterThan>
      <isGreaterThan compareValue="-1" prepend="and" property="Valid">
        a.Valid=#Valid#
      </isGreaterThan>
      <isGreaterThan compareValue="-1" prepend="and" property="DoType">
        a.ExamPaperDo=#DoType#
      </isGreaterThan>
      <isGreaterThan compareValue="0" prepend="and" property="Province_ID">
        a.Province_ID=#Province_ID#
      </isGreaterThan>
      order by a.Valid asc 
      <isEqual property="pageStatus" compareValue="1">
        limit #pageIndex#, #pageSize#
      </isEqual>
    </sql>

    <select id="GetExamPaper" resultClass="map" parameterClass="map">
      select a.*,b.Name as AddPersonName,c.Name as QuestionStoreName from w_exampaper a
      left join h_station_account b on a.AddPerson = b.Account_ID
      left join w_questionstore c on a.QuestionStore_ID = c.ID
      where a.ID = #id#
    </select>

    <select id="GetExamPaperQuestionTotalCount" resultClass="int" parameterClass="map">
      select count(1)
      <include refid ="GetExamPaperQuestion_Fragment"></include>
    </select>
    <select id="GetExamPaperQuestionList" resultClass="map" parameterClass="map">
      select b.*,c.Name as QuestionTypeName,d.Name as QuestionStoreName,a.Id as detailId
      <include refid ="GetExamPaperQuestion_Fragment"></include>
    </select>
    <sql id="GetExamPaperQuestion_Fragment">
      from w_exampaperdetail_detail a
      left join w_question b on a.Question_ID = b.ID
      left join w_questiontype c on b.QuestionType_ID = c.ID
      left join w_questionstore d on b.QuestionStore_ID = d.ID
      where a.ExamPaper_ID = #examPaperId# and a.ExamPaper_Detail_ID = #examPaperDetailId#
      <isNotEmpty prepend="and" property="title">
        b.Title like concat('%',#title#,'%')
      </isNotEmpty>
      <isGreaterThan compareValue="0" prepend="and" property="level">
        b.Level=#level#
      </isGreaterThan>
      order by a.ID desc
      <isEqual property="pageStatus" compareValue="1">
        limit #pageIndex#, #pageSize#
      </isEqual>
    </sql>


    <select id="GetNonExamPaperQuestionTotalCount" resultClass="int" parameterClass="map">
      select count(1)
      <include refid ="GetNonExamPaperQuestion_Fragment"></include>
    </select>
    <select id="GetNonExamPaperQuestionList" resultClass="map" parameterClass="map">
      select a.*,b.Name as QuestionTypeName,c.Name as QuestionStoreName
      <include refid ="GetNonExamPaperQuestion_Fragment"></include>
    </select>
    <sql id="GetNonExamPaperQuestion_Fragment">
      from w_question a
      left join w_questiontype b on a.QuestionType_ID = b.ID
      left join w_questionstore c on a.QuestionStore_ID = c.ID
      where a.QuestionStore_ID = #store#
      and a.ID not in (select Question_ID from w_exampaperdetail_detail where ExamPaper_ID = #examPaperId# and ExamPaper_Detail_ID = #examPaperDetailId#)
      <isGreaterThan compareValue="0" property="type">
        <isLessThan compareValue="7" prepend="and" property="type">
          a.QuestionType_ID=#type# and a.QuestionData_ID = 0
        </isLessThan>
      </isGreaterThan>
      <!--组合题-->
      <isEqual compareValue="7" prepend="and" property="type">
        a.QuestionData_ID > 0
      </isEqual>
      <isNotEmpty prepend="and" property="title">
        a.Title like concat('%',#title#,'%')
      </isNotEmpty>
      <isGreaterThan compareValue="0" prepend="and" property="level">
        a.Level=#level#
      </isGreaterThan>
      order by a.ID desc
      <isEqual property="pageStatus" compareValue="1">
        limit #pageIndex#, #pageSize#
      </isEqual>
    </sql>

    <select id="GetExamPaperType" resultClass="map" parameterClass="map">
      SELECT e.*,q.`Name` as Title,(select count(1) from w_exampaperdetail_detail where ExamPaper_Detail_ID = e.ID) as HasCount from w_exampaperdetail e
      left join w_questiontype q on e.QuestionType_ID=q.ID
      where e.ExamPaper_ID=#examPaperId#
      order by Sort asc
    </select>

    <select id="GetExamPaperTypebyID" resultClass="map" parameterClass="map">
      SELECT * from w_exampaperdetail where ID=#ID#
    </select>

    <select id="GetExamQuestion" resultClass="DataStoreProject.Model.ViewModel.Question" parameterClass="map">
      select a.*,b.ExamPaper_Detail_ID from w_question a join  w_exampaperdetail_detail b on a.ID = b.Question_ID
      where b.ExamPaper_ID = #examPaperId#
    </select>

    <select id="GetExamResult" resultClass="DataStoreProject.Model.ViewModel.Question" parameterClass="map">
      select a.*,b.MyAnswer,b.Judge,c.Name as QuestionType_Name,d.ExamPaper_Detail_ID from w_question a
      left join (SELECT * from W_DoExamResult_Detail where DoExamResult_ID = #resultId# and stuId = #stuId#) b on a.ID = b.Question_ID
      left join w_questiontype c on a.QuestionType_ID = c.ID
      join  w_exampaperdetail_detail d on a.ID = d.Question_ID
      where d.ExamPaper_ID = #busId#
    </select>


    <select id="GetExamQuestionData" resultClass="DataStoreProject.Model.Entity.Question.W_QuestionData" parameterClass="map">
      select * from w_questiondata where ID in (select QuestionData_ID from w_question where ID in (select Question_ID from w_exampaperdetail_detail where ExamPaper_ID =  #examPaperId#))
    </select>
    
    <delete id="DeleteExamPaperDetail" parameterClass="map">
      delete from w_exampaperdetail where ID=#ID#;
      delete from w_exampaperdetail_detail where ExamPaper_Detail_ID=#ID#
    </delete>
  </statements>
</sqlMap>