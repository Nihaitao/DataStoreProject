using CommonFramework.IBatisNet;
using DataStoreProject.Model.ViewModel;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DataStoreProject.Business
{
    public class CourseInterlocutionMapper : BaseMapper
    {
        /// <summary>
        /// 查询问答列表
        /// </summary>
        /// <param name="Discipline_ID">科目ID</param>
        /// <param name="Course_ID">网课ID</param>
        /// <param name="page"></param>
        /// <returns></returns>
        public List<InterlocutionModel> GetInterlocutionListByCuId(CampusModel model, int System_Station_ID)
        {
            List<InterlocutionModel> list = SqlMapper.QueryForList<InterlocutionModel>("GetInterlocutionListByCuId", new { System_Station_ID = System_Station_ID, Course_ID = model.Course_ID, Discipline_ID = model.Discipline_ID, pageIndex = (model.PageIndex - 1) * model.PageSize, pageSize = model.PageSize, pageStatus = model.PageStatus }).ToList();
            //最近回复
            List<NewInterlocution> newList = SqlMapper.QueryForList<NewInterlocution>("GetNewInterlocution", new { System_Station_ID = System_Station_ID, Course_ID = model.Course_ID, Discipline_ID = model.Discipline_ID }).ToList();
            foreach (InterlocutionModel item in list)
                item.NewInterlocution = newList.Where(x => x.PID == item.ID).OrderByDescending(x => x.AddTime).FirstOrDefault();
            return list;
        }

        /// <summary>
        /// 查询问答列表总条数
        /// </summary>
        /// <param name="request"></param>
        /// <returns></returns>
        public int GetInterlocutionListByCuIdCount(CampusModel model, int System_Station_ID)
        {
            return SqlMapper.QueryForObject<int>("GetInterlocutionListByCuIdCount", new { System_Station_ID = System_Station_ID, Course_ID = model.Course_ID, Discipline_ID = model.Discipline_ID, pageStatus = 0 });
        }

        /// <summary>
        /// 删除问答 by nht 2017-08-16
        /// </summary>
        /// <param name="request"></param>
        /// <returns></returns>
        public bool DeleteCourseInterlocution(CampusModel model)
        {
            return QueryForList("DeleteCourseInterlocution", new { Ids = model.Ids}).Count > 0;
        }

        /// <summary>
        /// 查询问答列表 by nht 2017-08-16
        /// </summary>
        /// <param name="request"></param>
        /// <returns></returns>
        public List<InterlocutionModel> GetCourseInterlocutionList(int PID, int System_Station_ID)
        {
            return SqlMapper.QueryForList<InterlocutionModel>("GetCourseInterlocutionList", new { PID = PID, System_Station_ID = System_Station_ID }).ToList();
        }

        /// <summary>
        ///查询评论列表 by nht 2017-08-16
        /// </summary>
        /// <param name="request"></param>
        /// <returns></returns>
        public List<CommentModel> GetCourseCommentList(CampusModel model, int System_Station_ID)
        {
            return SqlMapper.QueryForList<CommentModel>("GetCourseCommentList", new {Course_ID=model.Course_ID,Discipline_ID=model.Discipline_ID, pageIndex = (model.PageIndex - 1) * model.PageSize, pageSize = model.PageSize, pageStatus = model.PageStatus }).ToList();
        }

        /// <summary>
        /// 查询评论列表总条数
        /// </summary>
        /// <param name="request"></param>
        /// <returns></returns>
        public int GetCourseCommentListCount(CampusModel model, int System_Station_ID)
        {
            return SqlMapper.QueryForObject<int>("GetCourseCommentListCount", new { Course_ID = model.Course_ID, Discipline_ID = model.Discipline_ID, pageStatus = 0 });
        }

        /// <summary>
        /// 删除评论 
        /// </summary>
        /// <param name="request"></param>
        /// <returns></returns>
        public bool DeleteCourseComment(CampusModel model)
        {
            return QueryForList("DeleteCourseComment", new { Ids = model.Ids }).Count > 0;
        }
    }
}
